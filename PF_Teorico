import numpy as np
def PF_Teorico (PRICING, PAYMENTS, RESULT):
//PRICING = NOMBRE DE LA TABLA DE TERADATA QUE CONTIENE LOS PRICINGS
// PAYMENTS = NOMBRE DE LA TABLA DE TERADTA QUE CONTIENE LOS PAYMENTS
// RESULT = NOMBRE DE LA TABLA DE TERADATA EN DONDE SE GUARDARÁ EL OUTPUT

CANT_PRICING_TYPES = select COUNT (DISTICT PRICING_TYPES_ID) from PRICING
	
For i = 1 to CANT_PRICING_TYPES
		
	// Me fijo cuales variables están en juego en ese PRICING_TYPE
	VARIABLES = Select (DISTICT FIELD_NAME) from PRICING where PRICING_PRIORIDAD = 1 
    	// ejemplos [‘payment_method_id’,’collector_id’]
		
    	CANT_VARIABLES = VARIABLES.SHAPE[1]
		
	// ARMO EL SET DE REGLAS 
	CANT_REGLAS = Select (DISTINCT PRICING_RULE_ID) from PRICING where PRICING_PRIORIDAD = i
    	DETALLE_REGLA = Select FIELD_NAME, OPERATOR, VALUE_EXPRESSION from PRICING where PRICING_PRIORIDAD = i 
	
	// ARMO EL STRING QUE VOY A USAR EN EL ON DEL INNER JOIN ENTRE PAYMENTS Y PRICING
	For j = 1 to CANT_REGLAS
		If j = 1 then
			string = string
		else
			stirng = string &"OR"
		end
		PRICING_RULE_ID = REGLAS [j]
		For k = 1 to CANT_VARIABLES
			If j = 1 then
				string = string
			else
				stirng = string &"AND"
			end
			If DETALLE_REGLA [j,2] = "not equals" THEN
				stirng = string & "AND" & DETALLE_REGLA [j,1] & "=" & DETALLE_REGLA [j,3]
			else
				stirng = string & "AND" & DETALLE_REGLA [j,1] & "<>" & DETALLE_REGLA [j,3]
	
	
	// CREO UNA TABLA DE RESULTADOS
	CREATE TABLE RESULT AS 
	SELECT 
		PAYMENT_ID.PAYMENTS,
		PROCESSING_FEE.PAYMENT,
		PROCESSING_FEE.PRICING
	FROM PAYMENTS INNER JOIN  PRICING 
	ON string,
